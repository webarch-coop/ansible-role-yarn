# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects Yarn Ansible role.
#
# The Webarchitects Yarn Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects Yarn Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects Yarn Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Install Yarn Classic
  block:

    - name: Include apt role local fact tasks if variables are not defined
      ansible.builtin.include_role:
        name: apt
        tasks_from: local_facts.yml
      when: >-
        ( ansible_local.dpkg.arch is not defined ) or
        ( ansible_local.gpg.version is not defined ) or
        ( ansible_local.bash.path is not defined )

    - name: Include apt tasks
      ansible.builtin.include_tasks: apt.yml

    - name: Update apt cache in a block to catch failures
      block:

        - name: Update apt cache
          ansible.builtin.apt:
            update_cache: true
          register: yarn_apt_cache

      rescue:

        - name: Debug the apt cache update failure
          ansible.builtin.debug:
            var: yarn_apt_cache

        - name: Slurp a base64 encoded version of the yarn.sources file
          ansible.builtin.slurp:
            src: /etc/apt/sources.list.d/yarn.sources
          register: yarn_rescue_sources_b64encoded

        - name: Decode the base64 encoded version of the yarn.sources file and set a variable
          ansible.builtin.set_fact:
            yarn_rescue_sources_contents: "{{ yarn_rescue_sources_b64encoded['content'] | b64decode | trim }}"

        - name: Debug the yarn.sources file
          ansible.builtin.debug:
            var: yarn_rescue_sources_contents

        - name: Stat /etc/apt/keyrings/yarn.gpg
          ansible.builtin.stat:
            path: /etc/apt/keyrings/yarn.gpg
            get_checksum: true
            checksum_algorithm: sha256
          register: yarn_rescue_gpg

        - name: Debug the results from stating the yarn.gpg key
          ansible.builtin.debug:
            var: yarn_rescue_gpg.stat

        - name: Check the GPG key
          ansible.builtin.command: gpg -vv /etc/apt/keyrings/yarn.gpg
          check_mode: false
          changed_when: false
          register: yarn_rescue_gpg_info
          when: yarn_rescue_gpg.stat.exists | bool

        - name: Debug the stdout from running gpp against the yarn.gpg key
          ansible.builtin.debug:
            var: yarn_rescue_gpg_info.stdout_lines

        - name: Debug the stderr from running gpp against the yarn.gpg key
          ansible.builtin.debug:
            var: yarn_rescue_gpg_info.stderr_lines

        - name: Manually run apt-get update  # noqa command-instead-of-module
          ansible.builtin.command: apt-get update

        - name: Fail due to the failure of the yarn install
          ansible.builtin.fail:

    - name: Yarn package present
      ansible.builtin.apt:
        pkg:
          - yarn
        state: present
        update_cache: true

  when: yarn | bool
  tags:
    - yarn
...
